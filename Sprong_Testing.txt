Testing
1. Introduction to Spring Testing
2. Unit Testing
2.1. Mock Objects
2.1.1. Environment
2.1.2. JNDI
2.1.3. Servlet API
2.1.4. Spring Web Reactive
2.2. Unit Testing Support Classes
2.2.1. General Testing Utilities
2.2.2. Spring MVC Testing Utilities
3. Integration Testing
3.1. Goals of Integration Testing
3.1.1. Context Management and Caching
3.1.2. Dependency Injection of Test Fixtures
3.1.3. Transaction Management
3.1.4. Support Classes for Integration Testing
4. JDBC Testing Support
4.1. JdbcTestUtils
4.2. Embedded Databases
5. Spring TestContext Framework
5.1. Key Abstractions
5.1.1. TestContext
5.1.2. TestContextManager
5.1.3. TestExecutionListener
5.1.4. Context Loaders
5.2. Bootstrapping the TestContext Framework
5.3. TestExecutionListener Configuration
5.3.1. Registering TestExecutionListener Implementations
5.3.2. Automatic Discovery of Default TestExecutionListener Implementations
5.3.3. Ordering TestExecutionListener Implementations
5.3.4. Merging TestExecutionListener Implementations
5.4. Application Events
5.5. Test Execution Events
5.5.1. Exception Handling
5.5.2. Asynchronous Listeners
5.6. Context Management
5.6.1. Context Configuration with XML resources
5.6.2. Context Configuration with Groovy Scripts
5.6.3. Context Configuration with Component Classes
5.6.4. Mixing XML, Groovy Scripts, and Component Classes
5.6.5. Context Configuration with Context Initializers
5.6.6. Context Configuration Inheritance
5.6.7. Context Configuration with Environment Profiles
5.6.8. Context Configuration with Test Property Sources
Declaring Test Property Sources
Default Properties File Detection
Precedence
Inheriting and Overriding Test Property Sources
5.6.9. Context Configuration with Dynamic Property Sources
Precedence
5.6.10. Loading a WebApplicationContext
5.6.11. Working with Web Mocks
5.6.12. Context Caching
5.6.13. Context Hierarchies
5.7. Dependency Injection of Test Fixtures
5.8. Testing Request- and Session-scoped Beans
5.9. Transaction Management
5.9.1. Test-managed Transactions
5.9.2. Enabling and Disabling Transactions
5.9.3. Transaction Rollback and Commit Behavior
5.9.4. Programmatic Transaction Management
5.9.5. Running Code Outside of a Transaction
5.9.6. Configuring a Transaction Manager
5.9.7. Demonstration of All Transaction-related Annotations
5.10. Executing SQL Scripts
5.10.1. Executing SQL scripts programmatically
5.10.2. Executing SQL scripts declaratively with @Sql
Path Resource Semantics
Default Script Detection
Declaring Multiple @Sql Sets
Script Execution Phases
Script Configuration with @SqlConfig
Merging and Overriding Configuration with @SqlMergeMode
5.11. Parallel Test Execution
5.12. TestContext Framework Support Classes
5.12.1. Spring JUnit 4 Runner
5.12.2. Spring JUnit 4 Rules
5.12.3. JUnit 4 Support Classes
5.12.4. SpringExtension for JUnit Jupiter
Dependency Injection with SpringExtension
Constructor Injection
Method Injection
@Nested test class configuration
5.12.5. TestNG Support Classes
5.13. Ahead of Time Support for Tests
6. WebTestClient
6.1. Setup
6.1.1. Bind to Controller
6.1.2. Bind to ApplicationContext
6.1.3. Bind to Router Function
6.1.4. Bind to Server
6.1.5. Client Config
6.2. Writing Tests
6.2.1. No Content
6.2.2. JSON Content
6.2.3. Streaming Responses
6.2.4. MockMvc Assertions
7. MockMvc
7.1. Overview
7.2. Static Imports
7.3. Setup Choices
7.4. Setup Features
7.5. Performing Requests
7.6. Defining Expectations
7.7. Async Requests
7.8. Streaming Responses
7.9. Filter Registrations
7.10. MockMvc vs End-to-End Tests
7.11. Further Examples
7.12. HtmlUnit Integration
7.12.1. Why HtmlUnit Integration?
Integration Testing to the Rescue?
Enter HtmlUnit Integration
HtmlUnit Integration Options
7.12.2. MockMvc and HtmlUnit
MockMvc and HtmlUnit Setup
MockMvc and HtmlUnit Usage
Advanced MockMvcWebClientBuilder
7.12.3. MockMvc and WebDriver
Why WebDriver and MockMvc?
MockMvc and WebDriver Setup
MockMvc and WebDriver Usage
Advanced MockMvcHtmlUnitDriverBuilder
7.12.4. MockMvc and Geb
Why Geb and MockMvc?
MockMvc and Geb Setup
MockMvc and Geb Usage
8. Testing Client Applications
8.1. Static Imports
8.2. Further Examples of Client-side REST Tests
9. Appendix
9.1. Annotations
9.1.1. Standard Annotation Support
9.1.2. Spring Testing Annotations
@BootstrapWith
@ContextConfiguration
@WebAppConfiguration
@ContextHierarchy
@ActiveProfiles
@TestPropertySource
@DynamicPropertySource
@DirtiesContext
@TestExecutionListeners
@RecordApplicationEvents
@Commit
@Rollback
@BeforeTransaction
@AfterTransaction
@Sql
@SqlConfig
@SqlMergeMode
@SqlGroup
9.1.3. Spring JUnit 4 Testing Annotations
@IfProfileValue
@ProfileValueSourceConfiguration
@Timed
@Repeat
9.1.4. Spring JUnit Jupiter Testing Annotations
@SpringJUnitConfig
@SpringJUnitWebConfig
@TestConstructor
@NestedTestConfiguration
@EnabledIf
@DisabledIf
9.1.5. Meta-Annotation Support for Testing
9.2. Further Resources
